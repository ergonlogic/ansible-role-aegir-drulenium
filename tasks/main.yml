---
- name: Look up Hostmaster root from Drush alias record
  shell: "drush sa @hostmaster | grep root | cut -f4 -d\"'\""
  register: drulenium_hostmaster_alias_root
  become: True
  become_user: "{{ aegir_user }}"
  changed_when: False

- name: Set default drulenium_hostmaster_root
  set_fact:
    drulenium_hostmaster_root: "{{ drulenium_hostmaster_alias_root.stdout }}"
  when: drulenium_hostmaster_root is not defined
  changed_when: False

- name: Include git-based install of Drupal modules and libraries
  include: git.yml
  when: drulenium_module_install_method == 'git'

- name: Include Drush makefile-based install of Drupal modules and libraries
  include: make.yml
  when: drulenium_module_install_method == 'make'

- name: Check if Aegir Drulenium modules are enabled
  shell: "drush @hm pm-info --fields=status --format=list {{ item.key }} | egrep 'disabled|not installed'"
  become: True
  become_user: "{{ aegir_user }}"
  register: drulenium_modules_enabled
  with_dict: "{{ drulenium_modules }}"
  changed_when: False
  failed_when: False
  ignore_errors: yes

- name: Enable Aegir Drulenium modules
  command: "drush @hm --yes en {{ item.item.key }} --no-verify --strict=0"
  become: True
  become_user: "{{ aegir_user }}"
  when: item.rc == 0
  with_items: "{{ drulenium_modules_enabled.results }}"
  notify: Verify Aegir front-end

- name: Check Drulenium server setting.
  shell: drush @hm vget drulenium_vr_config_server_opt --format=string
  become: yes
  become_user: "{{ aegir_user }}"
  register: drulenium_vr_config_server_opt_lookup
  changed_when: False
  failed_when: False

- name: Set Drulenium server.
  shell: "drush @hm vset drulenium_vr_config_server_opt {{ drulenium_vr_config_server_opt }}"
  become: yes
  become_user: "{{ aegir_user }}"
  when: drulenium_vr_config_server_opt_lookup.stdout != drulenium_vr_config_server_opt or
        drulenium_vr_config_server_opt_lookup.stderr == 'No matching variable found.'

- name: Check Drulenium server setting.
  shell: drush @hm vget drulenium_vr_config_image_server_opt --format=string
  become: yes
  become_user: "{{ aegir_user }}"
  register: drulenium_vr_config_image_server_opt_lookup
  changed_when: False
  failed_when: False

- name: Set Drulenium image server.
  shell: "drush @hm vset drulenium_vr_config_image_server_opt {{ drulenium_vr_config_image_server_opt }}"
  become: yes
  become_user: "{{ aegir_user }}"
  when: drulenium_vr_config_image_server_opt_lookup.stdout != drulenium_vr_config_image_server_opt or
        drulenium_vr_config_image_server_opt_lookup.stderr == 'No matching variable found.'

- name: Check ImageMagick path.
  shell: drush @hm vget drulenium_vr_release_imagemagick_path --format=string
  become: yes
  become_user: "{{ aegir_user }}"
  register: drulenium_vr_release_imagemagick_path_lookup
  changed_when: False
  failed_when: False

- name: Set ImageMagick path.
  shell: "drush @hm vset drulenium_vr_release_imagemagick_path {{ drulenium_vr_release_imagemagick_path }}"
  become: yes
  become_user: "{{ aegir_user }}"
  when: drulenium_vr_release_imagemagick_path_lookup.stdout != drulenium_vr_release_imagemagick_path or
        drulenium_vr_release_imagemagick_path_lookup.stderr == 'No matching variable found.'

